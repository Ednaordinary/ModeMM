import io
import requests
import numpy as np
import base64

# Get a video generated by LTX Video from Modemm

print("Requesting T5 embeddings")

params = {"stream": False}
data = {"prompt": "meow", "pad": False}

# This returns a npy file as bytes with T5 prompt embeds for our prompt
prompt_embeds = requests.get("http://127.0.0.1:14145/modemm/request/T5", params=params, json=data).content

# Result is an error, print it
if prompt_embeds[0] == 123:
    print(prompt_embeds)
    exit(0)

# Turn the bytes into a readable file-like object
prompt_embeds = io.BytesIO(prompt_embeds)

# Load the npy file into a numpy array
prompt_embeds = np.load(prompt_embeds)

# You can now manipulate the prompt embeds however you want
...

# Turn them back into a file object and then bytes to send back to Modemm
prompt_file = io.BytesIO()
np.save(prompt_file, prompt_embeds)
prompt_file.seek(0)
prompt_embeds = prompt_file.read()


print("Requesting a transformer run")

# Pass the latents and prompt embeddings in order to run the model. The model passes out updated latents with the video encoded

params = {"stream": False}
data = {"prompt_embeds": base64.b64encode(prompt_embeds).decode('UTF-8')}
latent = requests.get("http://127.0.0.1:14145/modemm/request/LTXVideo", params=params, json=data).content

# Result is an error, print it
if latent[0] == 123:
    print(latent)
    exit(0)

print(latent)